%chris

voorstel:

	-> Stel het model op adhv periode, dagen,...
	-> geef elke dag de relevante beslissingsvariabelen
	
	-> probeer een "oplossing" op te stellen adhv de beslissingsvariabelen
	
	-> als er constraints niet gerespecteerd (kunnen) worden exception out & probeer iets anders
	-> stel de objective function op adhv de "oplossing"
	
	-> wisselen is dan simpelweg ergens 1 beslissingsvariabele wisselen: dit kunnen we randomisen.
	
	-> groot probleem: hoe stellen we (vertrekkend van de beslissingsvariabelen) een 'oplossing' op?
	
dit lijkt wat op de manier waarop dat TSP-verhaal werd opgelost:
	de beslissingen daar waren de volgorde waarin steden bezocht werden
	hier is het eigenlijk de volgorde waarin we proberen requests af te handelen, neen?
		of is het eerder de volgorde waarin we items zo efficient mogelijk produceren?
		
		we zouden kunnen de volgorde van requests randomisen, dan berekenen hoeveel items minstens op bepaalde dagen moeten (in totaal) geproduceerd zijn (dit lukt wel denk ik?)
		en dan zo kijken om de machines zo efficient mogelijk die items te laten produceren in de volgorde waarin ze nodig zijn.
		
--------------------------------------------------------------------------------------------------------------------------------------

1) schedule maintenance (cfr Hatice: geldt dit als een initiele oplossing?)
	
2) schedule blokken willekeurig & exception out als fout bij check? klinkt slecht
3) pak de laatste dag van een request wanneer die shipped kan worden & tel alle items op die ervoor nodig zijn.

	nu kunnen we gewoon switchen in nachtshifts/overtime/parallelwerk?
	
4) wissel de changeovers en pas productie aan naar gelang?
	wat met verschillende durations van changeovers?
	
	V/A machines: volgorde waarin items worden geproduceerd + hoeveel blokken dat je ze produceert? (+maintenance)
		meegeven van boolean maintenance aan Day als beslissing die je kan wisselen? hier moet wel de limiet gerespecteerd worden.
		
		1,3
		2,7
		1,4
		
--------------------------------------------------------------------------------------------------------------------------------------
%Brecht

Voorstel move-operator:


- Vertrek vanuit model met maintenances zonder overtime/nightshift/parallel

- Geef een random volgorde van items

- Produceer elk item tot stopwaarde(bv. het minimum van max_stocklvl en som van alle units per request + minimum_stocklvl, 
																		of als technician nodig is voor next changeover)
		doe dit in de meegegeven volgorde en neem telkens machine met hoogste effinciency voor dit item
		na elk item geproduced, nieuwe changeover
		
- Evalueer per dag of er penalties zijn(requests niet gehaald/ onder min_stock...)
		probeer deze op te lossen door parallelwerk, overtime, nightshift(geef nightshift aan volgende dagen ook), 
									  parallelwerk met overtime, parallelwerk met nightshift -> neem solution met laagste evaluatie

- Doe opnieuw met andere volgorde van items

--------------------------------------------------------------------------------------------------------------------------------------

ipv List<List<Item>> ofzoiets gebruiken we een List<MachineOrder>: met dus per entry het volgende:
			
				- op welke machine zetten we de order
				- welk item produceren we
			   (- hoeveel blokken produceren we dit? )
			   
Om nu vanuit deze List<MachineOrder> naar een schedule te gaan het volgende:

				- voor elk item in deze list, zoek de eerst mogelijke positie om dit in het schema te zetten (met respect tot parallelwerk, overtime & nightshift)
				- gaan we over de limiet van mogelijke slots, exception out (throw new ConfigurationException()) & neem deze oplossing NOOIT aan. (dit lukt wel hopelijk?)
				
Swaps zijn nu:
				- overtime op een bepaalde dag? (0/1/2/3)
				- parallelwerk op een bepaalde dag? (0/1)
				- night shift gedurende een bepaalde periode?
					- ja/neen?
					
					--> hier moet de minimumperiode gerespecteerd worden alsook de carry-over
					
				- nieuwe (random) MachineOrder toevoegen
				- verplaatsen van machine van een MachineOrder
				- op een andere positie plaatsen in de lijst
				- +1/-1 blokken productie?















